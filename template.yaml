AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  course_subscriptions_api

  API to handle course subscriptions of a user

Parameters:
  ENVIRONMENT:
    Type: String
    Description: AWS Environment where code is being executed (AWS_SAM_LOCAL or AWS)
    Default: 'AWS_SAM_LOCAL'

  DYNAMODB_DEV_URI:
    Type: String
    Description: AWS local DynamoDB instance URI (will only be used if AWSENVNAME is AWS_SAM_LOCAL)
    Default: 'http://docker.for.mac.host.internal:8000'

Globals:
  Function:
    Timeout: 3

Resources:
  CourseSubscriptionsFunctionListAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: course_subscriptions/
      Handler: list_all.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          ENVIRONMENT: !Ref ENVIRONMENT
          DYNAMODB_DEV_URI: !Ref DYNAMODB_DEV_URI
      Events:
        ListAllApi:
          Type: Api
          Properties:
            Path: /course-subscriptions/list-all
            Method: get            

  CourseSubscriptionsFunctionListPk:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: course_subscriptions/
      Handler: list_pk.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          ENVIRONMENT: !Ref ENVIRONMENT
          DYNAMODB_DEV_URI: !Ref DYNAMODB_DEV_URI
      Events:
        ListPkApi:
          Type: Api
          Properties:
            Path: /course-subscriptions/list-pk/{pk}
            Method: get   

  CourseSubscriptionsFunctionCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: course_subscriptions/
      Handler: create.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          ENVIRONMENT: !Ref ENVIRONMENT
          DYNAMODB_DEV_URI: !Ref DYNAMODB_DEV_URI
      Events:
        CreateAPI:
          Type: Api
          Properties:
            Path: /course-subscriptions/create
            Method: post   

  CourseSubscriptionsFunctionUpdate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: course_subscriptions/
      Handler: update.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          ENVIRONMENT: !Ref ENVIRONMENT
          DYNAMODB_DEV_URI: !Ref DYNAMODB_DEV_URI
      Events:
        UpdateApi:
          Type: Api
          Properties:
            Path: /course-subscriptions/update
            Method: post  

  CourseSubscriptionsFunctionDelete:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: course_subscriptions/
      Handler: delete.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          ENVIRONMENT: !Ref ENVIRONMENT
          DYNAMODB_DEV_URI: !Ref DYNAMODB_DEV_URI
      Events:
        DeleteApi:
          Type: Api
          Properties:
            Path: /course-subscriptions/delete/{pk}/{sk}
            Method: delete

  CourseSubscriptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CourseSubscriptions
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S          
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: PK
          KeyType: RANGE          
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 1